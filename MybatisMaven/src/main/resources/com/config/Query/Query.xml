<?xml version="1.0" encoding="UTF-8"?>
<!--

       Copyright 2009-2012 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dao.QueryDao">

	<resultMap type="com.entity.Message" id="Message">
		<result column="ID" javaType="int" property="id"/>
		<result column="COMMAND" javaType="string" property="command"/>
		<result column="DESCRIPTION" javaType="string" property="description"/>
		<collection property="contents" resultMap="com.dao.ICommandDao.CommandContent"></collection>
	</resultMap>

	<select id="getMessageTotalCounts" resultType="int">
		select count(1) from message
	</select>
	
	<insert id="insertCommandContent" parameterType="com.entity.CommandContent">
		insert into command_content(content,command_id) values(#{content},#{command_id})
	</insert>
	
	<select id="getAllMessages" resultMap="Message">
		select cmd.ID,cmd.COMMAND,cmd.DESCRIPTION,cnt.CONTENT from COMMAND cmd LEFT JOIN COMMAND_CONTENT cnt ON cmd.ID = cnt.COMMAND_ID ORDER BY cmd.ID
	</select>
	
	<select id="getSpecialMessages" resultMap="Message" parameterType="com.entity.Command">
		select ID,COMMAND,DESCRIPTION from COMMAND
		<where>
			<if test="command != null and !&quot;&quot;.equals(command.trim())">
				COMMAND = #{command}
			</if>
			<if test="description != null and !&quot;&quot;.equals(description.trim())">
				AND DESCRIPTION like '%' #{description} '%'
			</if>
		</where>
		ORDER BY ID 
	</select>
	
	<select id="getSpecialMessageCounts" resultType="int" parameterType="com.entity.Command">
		select count(1) from COMMAND
		<where>
			<if test="command != null and !&quot;&quot;.equals(command.trim())">
				COMMAND = #{command}
			</if>
			<if test="description != null and !&quot;&quot;.equals(description.trim())">
				AND DESCRIPTION like '%' #{description} '%'
			</if>
		</where>
		ORDER BY ID 
	</select>
	
	<insert id="insertCommands" parameterType="List">
		insert into COMMAND(COMMAND,DESCRIPTION) values
		<foreach collection="list" separator="," item="item">
			(#{item.command},#{item.description})
		</foreach>
	</insert>
	
	<delete id="removeOneCommand" parameterType="int">
		delete from COMMAND where ID = #{_parameter}
	</delete>
	
	<delete id="removeSelected" parameterType="List">
		delete from COMMAND where ID in ( 
		<foreach collection="list" item="item" separator=",">
			#{item}
		</foreach>
		)
	</delete>
	
	<update id="updateOneCommand" parameterType="com.entity.Command">
		update Command set COMMAND=#{command},DESCRIPTION=#{description} where ID=#{id}
	</update>
	
	<select id="getLimitCommands" parameterType="com.entity.Pagination" resultMap="Message">
		select ID,COMMAND,DESCRIPTION from COMMAND order by ID limit #{baseSearch},#{basePagi}
	</select>
	
	<select id="getSpecialMessagesByPage" resultMap="Message" parameterType="com.entity.SearchParam">
		select ID,COMMAND,DESCRIPTION from COMMAND
		<where>
			<if test="command != null and !&quot;&quot;.equals(command.command.trim())">
				COMMAND = #{command.command}
			</if>
			<if test="command != null and !&quot;&quot;.equals(command.description.trim())">
				AND DESCRIPTION like '%' #{command.description} '%'
			</if>
		</where>
		ORDER BY ID 
	</select>
</mapper>
